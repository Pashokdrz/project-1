A = [0, 0, 0, 0, 1, 1, 1, 1] #задаём столб значений для А
B = [0, 0, 1, 1, 0, 0, 1, 1] #задаём столб значений для В
C = [0, 1, 0, 1, 0, 1, 0, 1] #задаём столб значений для С
a = 0
b = 0
c = 0
i = 0
#Выше были заданы переменные, которые будут использованы для выполнения программы
step1 = []
step2 = []
step3 = []
SKNF = []
#Выше были заданы пустые списки которые будут использованы для заполнения таблицы и ответа
while i < len(A):#Данный отрезок кода выполняет первое действие примера (A==С)
    a = A[i]
    c = C[i]
    if a == c:#Если А==С тогда в step1 добавится 1
        step1.append(1)
    else:#Иначе добавится 0
        step1.append(0)
    i += 1
i = 0
while i < len(A):#Данный отрезок кода выполняет второе действие примера (A*B*¬С)
    a = A[i]
    b = B[i]
    c = C[i]
    if c == 0:#Так как С стоит со знаком отрицания, здесь С меняет своё значение
        c = 1
    else:
        c = 0
    if a*b*c == 1:#Если произведение ABC равно 1, в step2 добавится 1
        step2.append(1)
    else:#Иначе добавится 0
        step2.append(0)
    i += 1
i = 0
while i < len(A):#Данный отрезок кода выполняет последнее действие кода ((A==С)+A*B*¬С)
    a = step1[i]
    b = step2[i]
    if a+b > 0:#Если сумма предыдущих действий равна значению большему нуля (1), в step 3 добавится 1
        step3.append(1)
    else:#Иначе добавится 0
        step3.append(0)
    i += 1
print('(A==С)+A*B*¬С')
#Далее задаётся таблица
print('A B C A==C AB¬С (A==С)+A*B*¬С')
i = 0
while i < len(A):
    print(A[i], B[i], C[i], ' ', step1[i], '  ', step2[i], '     ', step3[i])
    #Выше заполняется таблица значениями из ранее заполненных списков
    if step3[i] == 0:#Если в конечном ответе результат равен 0, то значения A, B и С записываются в список
        a = A[i]
        b = B[i]
        c = C[i]
        SKNF.append(a)
        SKNF.append(b)
        SKNF.append(c)
    i += 1
i = 0
print('СКНФ =')
while i < len(SKNF):#Далее работаем со списком SKNF в котором обрабатываем значения переменных
    if SKNF[i] == 0:
        SKNF[i] = 'A'
    else:
        SKNF[i] = '¬A'
    if SKNF[i+1] == 0:
        SKNF[i+1] = 'B'
    else:
        SKNF[i+1] = '¬B'
    if SKNF[i+2] == 0:
        SKNF[i+2] = 'C'
    else:
        SKNF[i+2] = '¬C'
    print('(',SKNF[i],'+',SKNF[i+1],'+',SKNF[i+2], ')')#Выводим СКНФ
    i += 3
